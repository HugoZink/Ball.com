// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WarehouseManagementAPI.DataAccess;

namespace WarehouseManagementAPI.Migrations
{
    [DbContext(typeof(WarehouseManagementDbContext))]
    partial class WarehouseManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WarehouseManagementAPI.Models.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<string>("PostalCode");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerId");

                    b.Property<DateTime>("DateTime");

                    b.Property<string>("Destination");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.OrderProduct", b =>
                {
                    b.Property<string>("OrderId");

                    b.Property<string>("ProductId");

                    b.Property<int>("Quantity");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.Package", b =>
                {
                    b.Property<string>("PackageId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BarcodeNumber");

                    b.Property<bool>("Delivered");

                    b.Property<DateTime>("DeliveryTime");

                    b.Property<string>("Region");

                    b.Property<string>("ShippingStatus");

                    b.Property<string>("TransportId");

                    b.Property<string>("TypeOfPackage");

                    b.Property<decimal>("WeightInKgMax");

                    b.Property<string>("ZipCode");

                    b.HasKey("PackageId");

                    b.HasIndex("TransportId");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.PackageOrder", b =>
                {
                    b.Property<string>("PackageId");

                    b.Property<string>("OrderId");

                    b.HasKey("PackageId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("PackageOrder");
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.PackageProduct", b =>
                {
                    b.Property<string>("PackageId");

                    b.Property<string>("ProductId");

                    b.HasKey("PackageId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("PackageProduct");
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<string>("Name");

                    b.Property<decimal>("Weight");

                    b.HasKey("ProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.Transport", b =>
                {
                    b.Property<string>("TransportId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityOfDestination");

                    b.Property<string>("CompanyName");

                    b.Property<string>("Description");

                    b.Property<decimal>("ShippingCost");

                    b.Property<string>("TypeOfShipment");

                    b.Property<decimal>("WeightInKgMax");

                    b.HasKey("TransportId");

                    b.ToTable("Transport");
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.Order", b =>
                {
                    b.HasOne("WarehouseManagementAPI.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.OrderProduct", b =>
                {
                    b.HasOne("WarehouseManagementAPI.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WarehouseManagementAPI.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.Package", b =>
                {
                    b.HasOne("WarehouseManagementAPI.Models.Transport", "Transport")
                        .WithMany()
                        .HasForeignKey("TransportId");
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.PackageOrder", b =>
                {
                    b.HasOne("WarehouseManagementAPI.Models.Order", "Order")
                        .WithMany("PackageOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WarehouseManagementAPI.Models.Package", "Package")
                        .WithMany("PackageOrders")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WarehouseManagementAPI.Models.PackageProduct", b =>
                {
                    b.HasOne("WarehouseManagementAPI.Models.Package", "Package")
                        .WithMany("PackageProducts")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WarehouseManagementAPI.Models.Product", "Product")
                        .WithMany("PackageProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
